What happens when you initialize a repository? Why do you need to do it? 

The .git subdirectory is created, and populated. It is needed for (among other things) storing delta-files to manage history, 
and signaling to GIT that this directory is a git repository.

How is the staging area different from the working directory and the repository? What value do you think it offers? 

The staging area is where tracked files that aren't yet commited to the repository are saved. This is usefull because it offers a second chance to regret any additions, and in the case of a remote repository it also facilitates working offline, and then commiting the history when connectivity is restored. 

How can you use the staging area to make sure you have one commit per logical change? 

By using git diff --staged to compare the staging area to the latest commited change. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Adding experimental features, checking different implementations of the same feature. 

How do the diagrams help you visualize the branch structure?

2d information gives a much clearer overview of the history than a simple 1d representation. 


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Merging two branches results in a node/commit with two parents. It also results in a node label being deleted. 

