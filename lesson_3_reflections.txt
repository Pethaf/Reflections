When would you want to use a remote repository rather than keeping all your work local? 

A remote repository is usefull both for colaborative work and
for sharing a file among multiple development sites.(Compare to dropbox)

Why might you want to always pull changes manually rather than having Git 
automatically stay up-to-date with your remote repository?

If commits to a remote repository need to be vetted before integration. 

Describe the differences between forks, clones, and branches. When would you use one instead of another? 

A fork is a clone that happens on github. This is used when a copy of a repository on github is wanted, with propper attribution to the original author. 
A clone is a copy of a repository, including all commit history. This is used when a copy of a repository that is not necessarily on github. 
A branch is a divergence in the linear history of a commit. This is useful if an experimental feature is demanded or if multiple collaborators work on different features in the same 
commit tree. 

What is the benefit of having a copy of the last known state of the remote stored locally? 

As was demonstrated in the video, storing the local state of the remote locally allows for continued work locally even if contact with the remote is lost. 

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder? 

This is 2 questions rolled into one. The first question is what I would do without using GIT. 
The answer to this question depends on what is meant by "without GIT". If this means that I am free to use another version controll system, like SVN, bzr, or HG then colaboration would carry out pretty much as it does while using GIT. Without GIThub it is still possible to use git over ssh and https to collaborate on local repos. With access to neither version control system nor github then it is probably back to using different file names and mailing/scping back and forth. 